name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3  # Use v3 for consistency

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        flake8 src/ tests/

  train:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3  # Use v3 for consistency

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install mlflow

    - name: Train model
      run: |
        python src/model.py  # The script that trains and saves the model

    - name: Save model artifact
      uses: actions/upload-artifact@v3
      with:
        name: model-artifacts
        path: |
          src/model.h5
          src/tokenizer.pkl

  test:
    needs: train
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3  # Use v3 for consistency

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install .

    - name: Set PYTHONPATH environment variable
      run: |
        echo "PYTHONPATH=$(pwd)/src" >> $GITHUB_ENV
        echo "PYTHONPATH is set to $PYTHONPATH"

    - name: Run tests
      run: |
        pytest tests/ --disable-warnings

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3  # Use v3 for consistency

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install mlflow gunicorn

    - name: Run Flask application with Gunicorn
      run: |
        gunicorn -w 4 -b 0.0.0.0:8000 app:app &  # Run Gunicorn in the background

    - name: Integration test
      run: curl -f http://127.0.0.1:8000 || exit 1  # Test if Flask app is running

    - name: Stop Flask
      run: pkill gunicorn  # Gracefully stop Gunicorn

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3  # Use v3 for consistency

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Run linter
      run: |
        flake8 src tests --count --select=E9,E7,E5,F,C901,W --show-source --statistics
